// <auto-generated />
using System;
using Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    partial class LibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Models.Apartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Bads")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Photos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PricePerNight")
                        .HasColumnType("int");

                    b.Property<bool>("Rented")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RentedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RenteesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ReturnedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RenteesId");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("Domain.Models.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Maker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PricePerDay")
                        .HasColumnType("int");

                    b.Property<bool>("Rented")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RentedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RenteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ReturnedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("YearProduced")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RenteeId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("Domain.Models.Rentee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rentees");
                });

            modelBuilder.Entity("Domain.Models.Apartment", b =>
                {
                    b.HasOne("Domain.Models.Rentee", "Rentees")
                        .WithMany("Apartments")
                        .HasForeignKey("RenteesId");

                    b.Navigation("Rentees");
                });

            modelBuilder.Entity("Domain.Models.Car", b =>
                {
                    b.HasOne("Domain.Models.Rentee", "Rentee")
                        .WithMany("Cars")
                        .HasForeignKey("RenteeId");

                    b.Navigation("Rentee");
                });

            modelBuilder.Entity("Domain.Models.Rentee", b =>
                {
                    b.Navigation("Apartments");

                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
